{"ast":null,"code":"var _jsxFileName = \"/Users/atrp/Documents/Projects/event_Board/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Title from './components/Title';\nimport './App.css';\nimport React, { useState } from 'react';\nimport EventList from './components/EventList';\nimport Overlay from './components/Overlay';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faThumbtack } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const boardPin = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n    icon: faThumbtack\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 20\n  }, this); // FILTER BY NAME / SELECT / DATE \n\n\n  const [overlayShow, setOverlayShow] = useState(false);\n  const [events, setEvents] = useState([{\n    id: 1,\n    title: \"Bradley's flat party\",\n    location: 'FeatherHall Avenue',\n    date: '20/6/2022',\n    time: '15:00',\n    type: '',\n    description: 'Bring your own food and a sleeping bag'\n  }, {\n    id: 2,\n    title: \"Maya's study group\",\n    location: 'Usher Hall',\n    date: '3/5/2022',\n    time: '11:00',\n    type: 'Education',\n    description: 'Have your own laptop if possible'\n  }, {\n    id: 3,\n    title: \"City clean up\",\n    location: 'Waverley Station',\n    date: '12/3/2022',\n    time: '09:00',\n    type: 'Volunteering',\n    description: 'Warm clothes & lunch'\n  }]);\n\n  const filterEventType = event => {\n    events.map(eve => {\n      return eve.filter(event => {\n        return event === event.type;\n      });\n    });\n    filterEventType(event);\n\n    const addEvent = newEvent => {\n      setEvents(priorEvent => {\n        return [newEvent, ...priorEvent];\n      });\n    };\n\n    const deleteEventHandler = id => {\n      setEvents(priorEvents => {\n        return priorEvents.filter(event => {\n          return id !== event.id;\n        });\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        className: \"header_content\",\n        children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => setOverlayShow(true),\n          children: [\"Create \", boardPin]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"list\",\n        children: /*#__PURE__*/_jsxDEV(EventList, {\n          boardPin: boardPin,\n          events: events,\n          deleteEventHandler: deleteEventHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), overlayShow && /*#__PURE__*/_jsxDEV(Overlay, {\n        setOverlayShow: setOverlayShow,\n        addEvent: addEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true);\n  };\n}\n\n_s(App, \"0jJ0dhuX+sLpKfFklB6MMmeug+Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/atrp/Documents/Projects/event_Board/src/App.js"],"names":["Title","React","useState","EventList","Overlay","Button","Container","FontAwesomeIcon","faThumbtack","App","boardPin","overlayShow","setOverlayShow","events","setEvents","id","title","location","date","time","type","description","filterEventType","event","map","eve","filter","addEvent","newEvent","priorEvent","deleteEventHandler","priorEvents"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,WAAT,QAA4B,mCAA5B;;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,gBAAG,QAAC,eAAD;AAAiB,IAAA,IAAI,EAAEF;AAAvB;AAAA;AAAA;AAAA;AAAA,UAAjB,CADa,CAGb;;;AAEA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,CACnC;AACEa,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,sBAFT;AAGEC,IAAAA,QAAQ,EAAE,oBAHZ;AAIEC,IAAAA,IAAI,EAAE,WAJR;AAKEC,IAAAA,IAAI,EAAE,OALR;AAMEC,IAAAA,IAAI,EAAE,EANR;AAOEC,IAAAA,WAAW,EAAE;AAPf,GADmC,EAUnC;AACEN,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,oBAFT;AAGEC,IAAAA,QAAQ,EAAE,YAHZ;AAIEC,IAAAA,IAAI,EAAE,UAJR;AAKEC,IAAAA,IAAI,EAAE,OALR;AAMEC,IAAAA,IAAI,EAAE,WANR;AAOEC,IAAAA,WAAW,EAAE;AAPf,GAVmC,EAmBnC;AACEN,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,eAFT;AAGEC,IAAAA,QAAQ,EAAE,kBAHZ;AAIEC,IAAAA,IAAI,EAAE,WAJR;AAKEC,IAAAA,IAAI,EAAE,OALR;AAMEC,IAAAA,IAAI,EAAE,cANR;AAOEC,IAAAA,WAAW,EAAE;AAPf,GAnBmC,CAAD,CAApC;;AA8BA,QAAMC,eAAe,GAAIC,KAAD,IAAW;AACjCV,IAAAA,MAAM,CAACW,GAAP,CAAWC,GAAG,IAAI;AAChB,aAAOA,GAAG,CAACC,MAAJ,CAAWH,KAAK,IAAI;AACzB,eAAOA,KAAK,KAAKA,KAAK,CAACH,IAAvB;AACD,OAFM,CAAP;AAGD,KAJD;AAMAE,IAAAA,eAAe,CAACC,KAAD,CAAf;;AAEA,UAAMI,QAAQ,GAAIC,QAAD,IAAc;AAC7Bd,MAAAA,SAAS,CAAEe,UAAD,IAAgB;AACxB,eAAO,CAACD,QAAD,EAAW,GAAGC,UAAd,CAAP;AACD,OAFQ,CAAT;AAGD,KAJD;;AAMA,UAAMC,kBAAkB,GAAIf,EAAD,IAAQ;AACjCD,MAAAA,SAAS,CAAEiB,WAAD,IAAiB;AACzB,eAAOA,WAAW,CAACL,MAAZ,CAAoBH,KAAD,IAAW;AACnC,iBAAOR,EAAE,KAAKQ,KAAK,CAACR,EAApB;AACD,SAFM,CAAP;AAGD,OAJQ,CAAT;AAKD,KAND;;AAQA,wBACE;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,SAAS,EAAC,gBAArB;AAAA,gCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,OAAO,EAAE,MAAMH,cAAc,CAAC,IAAD,CAAvD;AAAA,gCACUF,QADV;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,SAAD;AAAW,QAAA,SAAS,EAAC,MAArB;AAAA,+BACE,QAAC,SAAD;AACE,UAAA,QAAQ,EAAEA,QADZ;AAEE,UAAA,MAAM,EAAEG,MAFV;AAGE,UAAA,kBAAkB,EAAEiB;AAHtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF,EAiBInB,WAAW,iBAAI,QAAC,OAAD;AAAS,QAAA,cAAc,EAAEC,cAAzB;AAAyC,QAAA,QAAQ,EAAEe;AAAnD;AAAA;AAAA;AAAA;AAAA,cAjBnB;AAAA,oBADF;AAuBD,GA9CD;AA+CD;;GAnFQlB,G;;KAAAA,G;AAoFT,eAAeA,GAAf","sourcesContent":["import Title from './components/Title'\nimport './App.css';\nimport React, { useState } from 'react';\nimport EventList from './components/EventList';\nimport Overlay from './components/Overlay';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faThumbtack } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction App() {\n  const boardPin = <FontAwesomeIcon icon={faThumbtack} />\n\n  // FILTER BY NAME / SELECT / DATE \n\n  const [overlayShow, setOverlayShow] = useState(false);\n  const [events, setEvents] = useState([\n    {\n      id: 1,\n      title: \"Bradley's flat party\",\n      location: 'FeatherHall Avenue',\n      date: '20/6/2022',\n      time: '15:00',\n      type: '',\n      description: 'Bring your own food and a sleeping bag'\n    },\n    {\n      id: 2,\n      title: \"Maya's study group\",\n      location: 'Usher Hall',\n      date: '3/5/2022',\n      time: '11:00',\n      type: 'Education',\n      description: 'Have your own laptop if possible'\n    },\n    {\n      id: 3,\n      title: \"City clean up\",\n      location: 'Waverley Station',\n      date: '12/3/2022',\n      time: '09:00',\n      type: 'Volunteering',\n      description: 'Warm clothes & lunch'\n    },\n  ]);\n\n  const filterEventType = (event) => {\n    events.map(eve => {\n      return eve.filter(event => {\n        return event === event.type\n      })\n    })\n\n    filterEventType(event)\n\n    const addEvent = (newEvent) => {\n      setEvents((priorEvent) => {\n        return [newEvent, ...priorEvent];\n      });\n    }\n\n    const deleteEventHandler = (id) => {\n      setEvents((priorEvents) => {\n        return priorEvents.filter((event) => {\n          return id !== event.id;\n        });\n      })\n    }\n\n    return (\n      <>\n        <Container className='header_content'>\n          <Title />\n          <Button variant=\"primary\" onClick={() => setOverlayShow(true)}>\n            Create {boardPin}\n          </Button>\n        </Container>\n\n        <Container className='list'>\n          <EventList\n            boardPin={boardPin}\n            events={events}\n            deleteEventHandler={deleteEventHandler}\n          />\n        </Container>\n\n        {\n          overlayShow && <Overlay setOverlayShow={setOverlayShow} addEvent={addEvent} />\n        }\n\n      </>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}