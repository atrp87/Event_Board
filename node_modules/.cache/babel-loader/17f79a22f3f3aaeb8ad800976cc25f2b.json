{"ast":null,"code":"var _jsxFileName = \"/Users/atrp/Documents/Projects/event_Board/src/components/EventList.js\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EventList = _ref => {\n  let {\n    events,\n    deleteEventHandler,\n    boardPin\n  } = _ref;\n  return events.map(eve => /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      width: '1rem'\n    },\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n        children: boardPin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [eve.type, \" \", eve.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n        children: eve.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: eve.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [\"Location: \", eve.location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [\"Time: \", eve.time]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-danger\",\n        onClick: () => deleteEventHandler(eve.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this)\n  }, eve.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 7\n  }, this));\n};\n\n_c = EventList;\nexport default EventList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"sources":["/Users/atrp/Documents/Projects/event_Board/src/components/EventList.js"],"names":["Card","Button","EventList","events","deleteEventHandler","boardPin","map","eve","width","type","date","title","description","location","time","id"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;AAEA,MAAMC,SAAS,GAAG,QAA8C;AAAA,MAA7C;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,kBAAV;AAA8BC,IAAAA;AAA9B,GAA6C;AAC9D,SACEF,MAAM,CAACG,GAAP,CAAYC,GAAD,iBACT,QAAC,IAAD;AAAmB,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAA1B;AAAA,2BACE,QAAC,IAAD,CAAM,IAAN;AAAA,8BACE,QAAC,IAAD,CAAM,IAAN;AAAA,kBAAYH;AAAZ;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,mBAAYE,GAAG,CAACE,IAAhB,OAAuBF,GAAG,CAACG,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,IAAD,CAAM,KAAN;AAAA,kBAAaH,GAAG,CAACI;AAAjB;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,IAAD,CAAM,IAAN;AAAA,kBAAYJ,GAAG,CAACK;AAAhB;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,IAAD,CAAM,IAAN;AAAA,iCAAsBL,GAAG,CAACM,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,IAAD,CAAM,IAAN;AAAA,6BAAkBN,GAAG,CAACO,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,gBAAhB;AAAiC,QAAA,OAAO,EAAE,MAAMV,kBAAkB,CAACG,GAAG,CAACQ,EAAL,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,KAAWR,GAAG,CAACQ,EAAf;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAeD,CAhBD;;KAAMb,S;AAkBN,eAAeA,SAAf","sourcesContent":["import Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n\nconst EventList = ({ events, deleteEventHandler, boardPin }) => {\n  return (\n    events.map((eve) => (\n      <Card key={eve.id} style={{ width: '1rem' }}>\n        <Card.Body>\n          <Card.Text>{boardPin}</Card.Text>\n          <Card.Text>{eve.type} {eve.date}</Card.Text>\n          <Card.Title>{eve.title}</Card.Title>\n          <Card.Text>{eve.description}</Card.Text>\n          <Card.Text>Location: {eve.location}</Card.Text>\n          <Card.Text>Time: {eve.time}</Card.Text>\n          <Button variant=\"outline-danger\" onClick={() => deleteEventHandler(eve.id)}>Delete</Button>\n        </Card.Body>\n      </Card >\n    ))\n  );\n}\n\nexport default EventList;"]},"metadata":{},"sourceType":"module"}